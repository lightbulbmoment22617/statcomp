z <- rep(1:10, times = 10)
data <- data.frame(z = z, y = 2 * z + rnorm(length(z), sd = 4))

mod = lm(y~z, data=data)

newdata <- data.frame(z=-10:20)

plot(data$z, data$y, xlim=c(-10,20))
pred <- predict(mod, newdata, interval="prediction")
lines(newdata$z, pred[,1])
lines(newdata$z, pred[,2], lty=2, ylim=range(pred))
lines(newdata$z, pred[,3], lty=2, ylim=range(pred))
abline(0, 2, col='red')

points()

plot_predictions <- function(x, newdata, xname="x", ...) {
  pred <- predict(x, newdata, interval="prediction")
  ylim <- range(pred)
  plot(newdata[[xname]], pred[,1], ylim=ylim, type='l', ...)
  lines(newdata[[xname]], pred[,2], ylim=ylim, lty=2)
  lines(newdata[[xname]], pred[,3], ylim=ylim, lty=2)
}


mod2 <- lm(y~1+z+I(z^2), data)

plot_predictions(mod2, newdata, xname='z', xlab='z', ylab='y')
points(data$z, data$y, pch=20)
abline(0, 2, col=2)


formulas <- c(y~1,
              y~z,
              y~z+I(z^2),
              y~z+I(z^2)+I(z^3))

mods <- lapply(formulas, function(x) lm(x, data=data))

par(mfrow = c(2, 2))
for (k in seq_along(formulas))
{
  plot_predictions(mods[[k]], newdata, xname = "z", xlab='z', ylab = "y",
                  main=as.character(formulas[k]))
  points(data$z, data$y, pch=20)
  abline(0, 2, col = 2)
}
par(mfrow = c(1, 1))